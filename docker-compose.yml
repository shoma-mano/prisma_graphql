version: '3.8'

services:
  #  dev:
  #    container_name: nestjs_api_dev
  #    image: nestjs-api-dev:1.0.0
  #    build:
  #      context: .
  #      target: development
  #      dockerfile: ./Dockerfile
  #    command: npm run start:debug
  #    depends_on:
  #      - db
  #    ports:
  #      - 3100:3100
  #      - 9229:9229
  #    networks:
  #      - nesjs-network
  #    volumes:
  #      - .:/usr/src/app
  #      - /usr/src/app/node_modules
  #    restart: unless-stopped

  db:
    image: mysql:8.0
    container_name: mysql_host
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test_database
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      MYSQL_TCP_PORT: 3308
      TZ: 'Asia/Tokyo'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - nesjs-network
    #    volumes:
    #      - type: bind
    #        source: "./sql"
    #        target: "/sql"
    ports:
      - 3308:3308


#  prod:
#    container_name: nestjs_api_prod
#    image: nestjs-api-prod:1.0.0
#    build:
#      context: .
#      target: production
#      dockerfile: ./Dockerfile
#    command: npm run start:prod
#    ports:
#      - 3000:3000
#      - 9229:9229
#    networks:
#      - nesjs-network
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
#    restart: unless-stopped

networks:
  nesjs-network: